{"ast":null,"code":"var _jsxFileName = \"/Users/georgeskrinker/Documents/VibeParse/src/frontend/src/components/CodeDisplay.tsx\";\nimport React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/esm/default-highlight';\nimport atomOneDark from 'react-syntax-highlighter/dist/esm/styles/hljs/atom-one-dark';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeDisplay = ({\n  code,\n  language = 'java'\n}) => {\n  console.log('CodeDisplay: typeof code:', typeof code);\n  console.log('CodeDisplay: code value:', code);\n  if (typeof code !== 'string') {\n    console.error('CodeDisplay: code is not a string!', code);\n    if (Array.isArray(code)) {\n      console.error('CodeDisplay: code is an array. Array contents:', code);\n      code.forEach((item, idx) => {\n        console.error(`CodeDisplay: code[${idx}] type:`, typeof item, 'value:', item);\n      });\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: \"Invalid code data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n      language: language,\n      style: atomOneDark,\n      showLineNumbers: true,\n      wrapLines: true,\n      children: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigator.clipboard.writeText(code),\n      className: \"absolute top-2 right-2 px-2 py-1 bg-gray-700 text-white rounded text-sm hover:bg-gray-600\",\n      children: \"Copy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = CodeDisplay;\nexport default CodeDisplay;\nvar _c;\n$RefreshReg$(_c, \"CodeDisplay\");","map":{"version":3,"names":["React","SyntaxHighlighter","atomOneDark","jsxDEV","_jsxDEV","CodeDisplay","code","language","console","log","error","Array","isArray","forEach","item","idx","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","showLineNumbers","wrapLines","onClick","navigator","clipboard","writeText","_c","$RefreshReg$"],"sources":["/Users/georgeskrinker/Documents/VibeParse/src/frontend/src/components/CodeDisplay.tsx"],"sourcesContent":["import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/esm/default-highlight';\nimport atomOneDark from 'react-syntax-highlighter/dist/esm/styles/hljs/atom-one-dark';\n\ninterface CodeDisplayProps {\n  code: string;\n  language?: string;\n}\n\nconst CodeDisplay: React.FC<CodeDisplayProps> = ({\n  code,\n  language = 'java'\n}) => {\n  console.log('CodeDisplay: typeof code:', typeof code);\n  console.log('CodeDisplay: code value:', code);\n  if (typeof code !== 'string') {\n    console.error('CodeDisplay: code is not a string!', code);\n    if (Array.isArray(code)) {\n      console.error('CodeDisplay: code is an array. Array contents:', code);\n      (code as any[]).forEach((item: any, idx: number) => {\n        console.error(`CodeDisplay: code[${idx}] type:`, typeof item, 'value:', item);\n      });\n    }\n    return <div className=\"text-red-500\">Invalid code data</div>;\n  }\n  return (\n    <div className=\"relative\">\n      <SyntaxHighlighter\n        language={language}\n        style={atomOneDark}\n        showLineNumbers\n        wrapLines\n      >\n        {code}\n      </SyntaxHighlighter>\n      <button\n        onClick={() => navigator.clipboard.writeText(code)}\n        className=\"absolute top-2 right-2 px-2 py-1 bg-gray-700 text-white rounded text-sm hover:bg-gray-600\"\n      >\n        Copy\n      </button>\n    </div>\n  );\n};\n\nexport default CodeDisplay; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,MAAM,qDAAqD;AACnF,OAAOC,WAAW,MAAM,6DAA6D;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOtF,MAAMC,WAAuC,GAAGA,CAAC;EAC/CC,IAAI;EACJC,QAAQ,GAAG;AACb,CAAC,KAAK;EACJC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,OAAOH,IAAI,CAAC;EACrDE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,IAAI,CAAC;EAC7C,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5BE,OAAO,CAACE,KAAK,CAAC,oCAAoC,EAAEJ,IAAI,CAAC;IACzD,IAAIK,KAAK,CAACC,OAAO,CAACN,IAAI,CAAC,EAAE;MACvBE,OAAO,CAACE,KAAK,CAAC,gDAAgD,EAAEJ,IAAI,CAAC;MACpEA,IAAI,CAAWO,OAAO,CAAC,CAACC,IAAS,EAAEC,GAAW,KAAK;QAClDP,OAAO,CAACE,KAAK,CAAC,qBAAqBK,GAAG,SAAS,EAAE,OAAOD,IAAI,EAAE,QAAQ,EAAEA,IAAI,CAAC;MAC/E,CAAC,CAAC;IACJ;IACA,oBAAOV,OAAA;MAAKY,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9D;EACA,oBACEjB,OAAA;IAAKY,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBb,OAAA,CAACH,iBAAiB;MAChBM,QAAQ,EAAEA,QAAS;MACnBe,KAAK,EAAEpB,WAAY;MACnBqB,eAAe;MACfC,SAAS;MAAAP,QAAA,EAERX;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC,eACpBjB,OAAA;MACEqB,OAAO,EAAEA,CAAA,KAAMC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACtB,IAAI,CAAE;MACnDU,SAAS,EAAC,2FAA2F;MAAAC,QAAA,EACtG;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACQ,EAAA,GAlCIxB,WAAuC;AAoC7C,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}